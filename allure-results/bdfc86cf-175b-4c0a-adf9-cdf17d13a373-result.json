{"name": "test_del_contact_in_group", "status": "broken", "statusDetails": {"message": "ValueError: empty range for randrange()", "trace": "app = <fixture.application.Application object at 0x0000022416A03910>\ndb = <fixture.db.DbFixture object at 0x0000022416A02BC0>\n\n    def test_del_contact_in_group(app, db):\n        if len(db.get_group_list()) == 0:\n            app.group.create(Group(name=\"test\"))\n        old_contact_in_db = db.count_contact_in_group()\n        if len(app.contact.get_contact_list_in_group()) == 0:\n            old_contacts = app.contact.get_contact_list_in_none_group()\n>           index = randrange(len(old_contacts))\n\ntest_contact\\test_del_contact_in_group.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <random.Random object at 0x000002241457D2A0>, start = 0, stop = None, step = 1\n\n    def randrange(self, start, stop=None, step=_ONE):\n        \"\"\"Choose a random item from range(start, stop[, step]).\n    \n        This fixes the problem with randint() which includes the\n        endpoint; in Python this is usually not what you want.\n    \n        \"\"\"\n    \n        # This code is a bit messy to make it fast for the\n        # common case while still doing adequate error checking.\n        try:\n            istart = _index(start)\n        except TypeError:\n            istart = int(start)\n            if istart != start:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer arg 1 for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        if stop is None:\n            # We don't check for \"step != 1\" because it hasn't been\n            # type checked and converted to an integer yet.\n            if step is not _ONE:\n                raise TypeError('Missing a non-None stop argument')\n            if istart > 0:\n                return self._randbelow(istart)\n>           raise ValueError(\"empty range for randrange()\")\nE           ValueError: empty range for randrange()\n\nC:\\python39\\lib\\random.py:321: ValueError"}, "start": 1635256684406, "stop": 1635256686812, "uuid": "1d17dea2-907f-4802-b2d9-0207e558671f", "historyId": "f88b449319bbaee965e6d097d3b8e1cc", "testCaseId": "49f2c6e25015352cbf87263b3f5e40a9", "fullName": "test_contact.test_del_contact_in_group#test_del_contact_in_group", "labels": [{"name": "parentSuite", "value": "test_contact"}, {"name": "suite", "value": "test_del_contact_in_group"}, {"name": "host", "value": "0000nbc00106409"}, {"name": "thread", "value": "13852-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_contact.test_del_contact_in_group"}]}